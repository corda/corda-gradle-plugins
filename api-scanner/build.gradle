apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'java-gradle-plugin'

description "Generates a summary of the artifact's public API"

repositories {
    mavenCentral()
    jcenter()
}

gradlePlugin {
    plugins {
        apiScannerPlugin {
            id = 'net.corda.plugins.api-scanner'
            implementationClass = 'net.corda.plugins.ApiScanner'
        }
    }
    automatedPublishing = false
}

pluginBundle {
    website = project.vcsUrl
    vcsUrl = project.vcsUrl
    description = 'Corda API Scanner Plugin'
    tags = ['corda']

    plugins {
        apiScannerPlugin {
            displayName = 'Corda API Scanner Plugin'
        }
    }
}

configurations {
    jacocoRuntime
}

dependencies {
    implementation "io.github.lukehutch:fast-classpath-scanner:2.18.2"
    testImplementation project(':api-scanner:annotations')
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    // This dependency is only to prevent IntelliJ from choking
    // on the Kotlin classes in the test/resources directory.
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    jacocoRuntime "org.jacoco:org.jacoco.agent:${jacoco.toolVersion}:runtime"
}

processTestResources {
    filesMatching('**/kotlin-*/build.gradle') {
        expand(['kotlin_version': kotlin_version])
    }
    filesMatching('gradle.properties') {
        expand(['jacocoAgent': configurations.jacocoRuntime.asPath.replace('\\', '/'),
                'buildDir': buildDir])
    }
}
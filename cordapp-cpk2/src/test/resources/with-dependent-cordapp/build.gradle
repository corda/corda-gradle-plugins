plugins {
    id 'net.corda.plugins.cordapp-cpk2'
}

apply from: 'repositories.gradle'
apply from: 'javaTarget.gradle'

configurations {
    cordappDependency {
        canBeConsumed = false
    }
}

allprojects {
    group = 'com.example'
}

cordapp {
    targetPlatformVersion = platform_version.toInteger()
    minimumPlatformVersion = platform_version.toInteger()

    workflow {
        name = 'With Dependent CorDapp'
        versionId = cordapp_workflow_version.toInteger()
        licence = 'Test-Licence'
        vendor = 'R3'
    }
}

tasks.named('jar', Jar) {
    archiveBaseName = 'with-dependent-cordapp'
    doFirst {
        configurations.compileClasspath.forEach { dep ->
            println "COMPILE-WORKFLOW> ${dep.name}"
        }
        configurations.cordappExternal.forEach { dep ->
            println "EXTERNAL-WORKFLOW> ${dep.name}"
        }
    }
}

dependencies {
    cordapp project(':cordapp')
    cordaProvided project(':corda-api')
    implementation("com.google.guava:guava:$guava_version") {
        transitive = false
    }
    cordappDependency project(path: ':cordapp', configuration: 'cordaCPK')
}

// Copy the CPK from ':cordapp' into our build directory.
def copy = tasks.register('copy', Copy) {
    into project.layout.buildDirectory
    from configurations.cordappDependency
    mustRunAfter tasks.named('verifyBundle')
}

tasks.named('assemble') {
    dependsOn copy
}

import java.time.Duration

plugins {
    id 'net.corda.plugins.cordformation'
}

apply from: 'repositories.gradle'

dependencies {
    cordaRuntimeOnly "$corda_group:corda:$corda_release_version"
    cordaRuntimeOnly "$corda_group:corda-node-api:$corda_release_version"
    cordapp "$corda_group:corda-finance-contracts:$finance_release_version"
    cordapp "$corda_group:corda-finance-workflows:$finance_release_version"
    cordaRuntimeOnly "org.slf4j:slf4j-simple:$slf4j_version"
}

task deployNodes(type: net.corda.plugins.Cordform) {
    networkParameterOverrides {
        packageOwnership {
            "com.mypackagename" {
                keystore = new File(projectDir, 'testkeystore').getAbsolutePath()
                keystorePassword = "MyStorePassword"
                keystoreAlias = "MyKeyAlias"
            }
        }
        minimumPlatformVersion = 3
        eventHorizon = Duration.ofDays(2)
        maxMessageSize = 123456
        maxTransactionSize = 2468
    }
    node {
        projectCordapp {
            deploy false
        }
        name 'O=Notary Service,L=Zurich,C=CH'
        notary = [validating : true]
        p2pPort 10002
        rpcPort 10003
        rpcSettings {
            adminAddress "localhost:10004"
        }
        cordapps = ["$corda_group:corda-finance-contracts:$finance_release_version",
                    "$corda_group:corda-finance-workflows:$finance_release_version"]
    }
}

plugins {
    id 'net.corda.plugins.cordformation'
}

apply from: 'repositories.gradle'

dependencies {
    cordaRuntimeOnly "$corda_group:corda:$corda_release_version"
    cordaRuntimeOnly "$corda_group:corda-node-api:$corda_release_version"
    cordapp "$corda_group:corda-finance-contracts:$corda_release_version"
    cordapp "$corda_group:corda-finance-workflows:$corda_release_version"
    cordaRuntimeOnly "org.slf4j:slf4j-simple:$slf4j_version"
}

task prepareDockerNodes(type: net.corda.plugins.Dockerform, dependsOn: ['jar']) {
    nodeDefaults {

        cordapps = ["$corda_group:corda-finance-contracts:$corda_release_version",
                    "$corda_group:corda-finance-workflows:$corda_release_version"]

        projectCordapp {
            deploy false
        }
    }
    node {
        name "O=Notary Service,L=London,C=GB"
        notary = [validating : false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        sshdPort 22234
    }
    node {
        name "O=BankOfCorda,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
        sshdPort 22235
    }

    external {
        containerName = "example-service"
        containerImage = "docker.io/bitnami/java:latest"
        servicePorts = [8080,8000]
        volumes =
        [
                [
                        "sourceFile"    : "C:\\Projects\\gs-rest-service\\target\\CordaDevTestAPI-0.0.1-SNAPSHOT.jar",
                        "deploymentPath": "/home/CordaDevTestAPI.jar"
                ]
        ]
        environment =
        [
                "rpcUsername": "user1",
                "rpcPassword": "pass2"
        ]
        commands = "bash -c \"cd home && java -jar CordaDevTestAPI.jar\""
        privileged = true
    }

    dockerImage = docker_image_name
}
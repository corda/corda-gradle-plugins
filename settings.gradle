pluginManagement {
    repositories {
        gradlePluginPortal()
        def cordaUseCache = System.getenv("CORDA_USE_CACHE")
        if (cordaUseCache != null) {
            maven {
                url = "$artifactoryContextUrl/$cordaUseCache"
                name = "R3 Maven remote repositories"
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = settings.ext.find('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                    password = settings.ext.find('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
                }
            }
    }

    plugins {
        id 'org.jetbrains.kotlin.jvm' version kotlin_version
        id 'org.jetbrains.dokka' version dokka_version
        id 'biz.aQute.bnd.builder' version bnd_version
        id 'com.gradle.plugin-publish' version gradle_publish_version
        id 'com.jfrog.artifactory' version artifactory_version
        id 'org.owasp.dependencycheck' version '6.2.2'
        id 'com.gradle.enterprise' version '3.6.4'
    }
}

plugins {
    id 'com.gradle.enterprise'
}

rootProject.name = 'corda-gradle-plugins'
//include 'publish-utils'
include 'quasar-utils'
//include 'cordformation'
include 'api-scanner'
include 'api-scanner:annotations'
include 'cordapp-cpk2'
//include 'cordapp'
include 'jar-filter'
include 'jar-filter:unwanteds'
//include 'flask'
//include 'flask:flask-common'
//include 'flask:flask-heartbeat-agent'
//include 'flask:flask-launcher'

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
